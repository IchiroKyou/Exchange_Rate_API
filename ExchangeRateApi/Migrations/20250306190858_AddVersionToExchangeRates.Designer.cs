// <auto-generated />
using System;
using ExchangeRateApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeRateApi.Migrations
{
    [DbContext(typeof(ExchangeRateApiDbContext))]
    [Migration("20250306190858_AddVersionToExchangeRates")]
    partial class AddVersionToExchangeRates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExchangeRateApi.Models.ExchangeRate", b =>
                {
                    b.Property<int>("ExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExchangeRateId"));

                    b.Property<decimal>("Ask")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)");

                    b.Property<decimal>("Bid")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)");

                    b.Property<string>("FromCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("Rate")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)");

                    b.Property<string>("ToCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ExchangeRateId");

                    b.HasIndex("FromCurrency", "ToCurrency");

                    b.ToTable("ExchangeRates");

                    b.HasData(
                        new
                        {
                            ExchangeRateId = -1,
                            Ask = 1.55m,
                            Bid = 1.05m,
                            FromCurrency = "EUR",
                            LastUpdate = new DateTime(2025, 3, 6, 19, 8, 57, 385, DateTimeKind.Utc).AddTicks(3815),
                            Rate = 0m,
                            ToCurrency = "USD"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
